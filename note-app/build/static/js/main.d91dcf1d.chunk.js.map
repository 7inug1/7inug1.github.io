{"version":3,"sources":["Form.jsx","Note.jsx","Tag.jsx","App.jsx","index.js"],"names":["Form","id","name","onSubmit","this","props","submitNewNote","type","onChange","handleNewNoteTitleChange","onKeyUp","addTags","placeholder","size","newNoteTags","map","newNoteTag","key","onClick","event","removeTags","handleNewNoteContentChange","React","Component","Note","filteredNotes","filteredNote","className","handleShow","title","content","tag","Tag","getNotesByTags","unduplicatedTagsArray","getFilteredTags","filteredTags","filteredTag","removeFilteredTags","App","state","data","show","setShow","newNoteTitle","newNoteContent","notes","filteringTag","currentlyClickedFilter","bind","handleClose","saveNotesToLocalStorage","retrieveNotesFromLocalStorage","i","length","item","JSON","stringify","localStorage","setItem","console","log","tempNotes","retrievingData","parse","getItem","push","setState","totalTagsArrayFlat","note","flat","tempFilteringTag","undefined","Set","tempFilteredTags","finalTags2","finalTags3","tempFilteredNotesArray","checker","arr","target","every","includes","prevProps","prevState","tempTagArrayFlat","tempTagArrayFlatUnduplicated","value","preventDefault","tempNewNoteTagsArray","tempFilteredTagsArray","splice","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d91dcf1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Form extends React.Component{\r\n  render(){\r\n    return <> \r\n        <form id=\"form\" name=\"form\" onSubmit={this.props.submitNewNote}>\r\n          <fieldset>\r\n          <legend>New Note</legend>\r\n            <label>\r\n            Title:\r\n              <input type=\"text\" name=\"title\" onChange={this.props.handleNewNoteTitleChange}/>\r\n            </label><br/>\r\n\r\n            <label>\r\n            Tag:\r\n              <input type=\"text\" name=\"tag\" onKeyUp={this.props.addTags} placeholder=\"Press shift to add tags\" size=\"80\"/>\r\n            </label><br/>\r\n            <ul>\r\n              {this.props.newNoteTags.map((newNoteTag, key)=>\r\n                <li key={key}>\r\n                  {/* <h1>key: {key}</h1> */}\r\n                  <span>{newNoteTag}</span>\r\n                  <button onClick={(event)=>this.props.removeTags(event, key)}>X</button>\r\n                </li>\r\n              )}\r\n            </ul>\r\n\r\n            <label>\r\n            Content:\r\n              <textarea type=\"textarea\" name=\"content\" onChange={this.props.handleNewNoteContentChange}/>\r\n            </label><br/>\r\n\r\n            <button >Submit</button>\r\n            </fieldset>\r\n        </form>\r\n      <br/>\r\n      \r\n      </>;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default class Note extends React.Component {\r\n  render() {\r\n    return <>\r\n      {/* <h1>Notes</h1> */}\r\n      {this.props.filteredNotes.map((filteredNote, key)=>\r\n        <div id=\"notes\">\r\n          <div className=\"individualNote\" key={key} onClick={this.props.handleShow}>\r\n            <h3> \r\n              Title: {filteredNote.title} \r\n            </h3>\r\n\r\n            <h3> \r\n              Content: {filteredNote.content} \r\n            </h3>\r\n\r\n            <h3> \r\n              Tag: \r\n              {filteredNote.tag.map((tag, key)=>\r\n                <li key={key}>{tag}</li>\r\n              )} \r\n            </h3>\r\n          </div>\r\n\r\n          {/* <div className=\"modal\" key={key}>\r\n          <Modal show={this.props.show} onHide={this.props.handleClose}>\r\n            <Modal.Header>\r\n              <Modal.Title>{filteredNote.title} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{filteredNote.content} </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.props.handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={this.props.handleClose}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div> */}\r\n        </div>\r\n      )}\r\n        \r\n    </>\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Tag extends React.Component {\r\n  render() {\r\n    return <>\r\n      <div id=\"tags\">\r\n        <div id=\"allTags\">\r\n          <h1>All tags</h1>\r\n            {/* All Button */}\r\n            <button onClick={() => this.props.getNotesByTags()}>All</button> \r\n            \r\n            {/* Rest of the buttons */}\r\n            {this.props.unduplicatedTagsArray.map((tag, key)=>\r\n              <div key={key} id=\"tags\">\r\n                <button onClick={() => this.props.getFilteredTags(tag)}>{tag}</button> \r\n              </div>\r\n            )}\r\n            <br/>\r\n        </div>\r\n\r\n        <div id=\"filteredTags\">\r\n          <h1>Filtered tags</h1>\r\n            {this.props.filteredTags.map((filteredTag, key)=>\r\n              <button key={key} onClick={() => this.props.removeFilteredTags(key)}>{filteredTag}</button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './style.css';\nimport Form from \"./Form.jsx\";\nimport Note from \"./Note.jsx\";\nimport Tag from \"./Tag.jsx\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Modal } from 'react-bootstrap';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      key: [],\n      data: [],\n\n      show: false,\n      setShow: false,\n      \n      newNoteTitle: \"\",\n      newNoteTags: [],\n      newNoteContent: \"\",\n      notes: [\n        // {\"title\": \"How to make a soup\", \"tag\": [\"recipe\"], \"content\": \"Put the powder into the pot and boil it.\"},\n        // {\"title\": \"make a table\", \"tag\": [\"recipe\"], \"content\": \"Put table boil it.\"},\n        // {\"title\": \"계란밥 만드는 법\", \"tag\": [\"recipe\", \"soup\"], \"content\": \"계란에 밥 비비기\"},\n        // {\"title\": \"비빔밥 만드는 법\", \"tag\": [\"soup\", \"recipe\"], \"content\": \"밥 비비기\"},\n        // {\"title\": \"How to study\", \"tag\": [\"recipe\", \"soup\", \"lifehack\"], \"content\": \"Just do it.\"},\n        // {\"title\": \"How to make a katsu\", \"tag\": [\"lifehack\", \"recipe\", \"soup\"], \"content\": \"Fry chicken or pork.\"},\n        // {\"title\": \"How to save money\", \"tag\": [\"lifehack\"], \"content\": \"Just save it.\"},\n        // {\"title\": \"What is life?\", \"tag\": [\"philosophy\"], \"content\": \"Life is something that has no meaning itself. You make of your own.\"}\n      ],\n      filteringTag: [], \n      filteredTags: [], \n      filteredNotes: [],\n      unduplicatedTagsArray: [],\n      currentlyClickedFilter: false\n    }\n    this.handleNewNoteTitleChange = this.handleNewNoteTitleChange.bind(this); \n    this.handleNewNoteContentChange = this.handleNewNoteContentChange.bind(this); \n    this.getFilteredTags = this.getFilteredTags.bind(this);\n    this.getNotesByTags = this.getNotesByTags.bind(this);\n    this.submitNewNote = this.submitNewNote.bind(this); \n    this.addTags = this.addTags.bind(this); \n    this.removeFilteredTags = this.removeFilteredTags.bind(this);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.saveNotesToLocalStorage = this.saveNotesToLocalStorage.bind(this);\n    this.retrieveNotesFromLocalStorage = this.retrieveNotesFromLocalStorage.bind(this);\n  }\n  \n  saveNotesToLocalStorage(){\n    for(let i = 0; i < this.state.notes.length; i++){\n      let key = i;\n      // key.toString();\n      let item = JSON.stringify(this.state.notes[i]);\n      // console.log(\"key: \" + key)\n      // console.log(\"item: \" + (item))\n      localStorage.setItem(key, item);\n    }\n    console.log(\"localStorage length: \" + localStorage.length)\n  }\n\n  retrieveNotesFromLocalStorage(){\n    let tempNotes = [];\n    console.log(\"localStorage length: \" + localStorage.length)\n    for(let i = 0; i < localStorage.length; i++){\n      let key = i;\n      let retrievingData = JSON.parse(localStorage.getItem(key));\n      // console.log(\"retrievingData: \" + retrievingData)\n      // console.log(\"retrievingData: \" + JSON.parse(retrievingData))\n      tempNotes.push(retrievingData);\n    }\n    this.setState({\n      notes: tempNotes\n    })\n  }\n\n  componentDidMount(){\n    this.retrieveNotesFromLocalStorage();\n    let totalTagsArray = this.state.notes.map((note)=>note.tag)\n    let totalTagsArrayFlat = totalTagsArray.flat()\n    let tempFilteringTag = [undefined];\n    this.setState({\n      filteringTag: tempFilteringTag,\n      unduplicatedTagsArray: [...new Set(totalTagsArrayFlat)],\n    })\n    \n    this.getNotesByTags(); \n    \n  }\n\n  getFilteredTags(tag){\n    let tempFilteredTags = [];\n    tempFilteredTags.push(tag)\n    let finalTags = [...this.state.filteredTags, tempFilteredTags]\n    let finalTags2 = finalTags.flat();\n    let finalTags3 = [...new Set(finalTags2)]\n    \n    this.setState({filteredTags: finalTags3})\n    this.getNotesByTags(tag)\n  }\n\n  getNotesByTags(tag){\n    if(tag===undefined){\n      this.setState({\n        filteredNotes: this.state.notes \n      })\n    }else{\n      let tempFilteredNotesArray = [];\n      let checker = (arr, target) => target.every(item => arr.includes(item));\n      for(let i = 0; i < this.state.notes.length; i++){\n        if (checker(this.state.notes[i].tag, this.state.filteredTags) === true ){\n          tempFilteredNotesArray.push(this.state.notes[i])\n        }\n      }      \n      this.setState({\n        filteredNotes: tempFilteredNotesArray\n      })\n      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.notes !== this.state.notes || prevState.filteredTags !== this.state.filteredTags ){\n      let tempTagArray = this.state.notes.map((note)=>note.tag) // 1. get all notes' tag\n      let tempTagArrayFlat = tempTagArray.flat() // 2. make #1 flat\n      let tempTagArrayFlatUnduplicated = [...new Set(tempTagArrayFlat)] // 3. get #2 unduplicated\n\n      this.setState({\n        unduplicatedTagsArray: tempTagArrayFlatUnduplicated\n      })\n      \n      this.getNotesByTags(!undefined);\n      this.saveNotesToLocalStorage();\n      // this.handleShow();\n    }\n  }\n\n  handleNewNoteTitleChange(event){\n    this.setState({\n      newNoteTitle: event.target.value\n    });\n  }\n\n  addTags(event){\n    event.preventDefault();\n    if(event.key === \"Shift\" && event.target.value){\n      console.log(\"added\")\n      let tempNewNoteTagsArray = this.state.newNoteTags;\n      tempNewNoteTagsArray.push(event.target.value);\n\n      this.setState({\n        newNoteTags: tempNewNoteTagsArray\n      });  \n      console.log(\"newNoteTags: \" + \"[\"+this.state.newNoteTags+\"]\")\n      event.target.value = \"\";\n    } \n  }\n\n  handleNewNoteContentChange(event){\n    this.setState({\n      newNoteContent: event.target.value\n    });\n  }\n\n  removeFilteredTags(key){\n    let tempFilteredTagsArray = this.state.filteredTags\n    tempFilteredTagsArray.splice(key, 1)\n    let tempFilteredNotesArray = [];\n    let checker = (arr, target) => target.every(item => arr.includes(item));\n    for(let i = 0; i < this.state.notes.length; i++){\n      if (checker(this.state.notes[i].tag, tempFilteredTagsArray) === true ){\n        tempFilteredNotesArray.push(this.state.notes[i])\n      }\n    }\n\n    this.setState({\n      filteredTags: tempFilteredTagsArray,\n      filteredNotes: tempFilteredNotesArray\n    })\n  }\n\n  submitNewNote(event){\n    event.preventDefault();\n    // console.log(this.state.newNoteTitle);\n    // console.log(this.state.newNoteTags);\n    // console.log(this.state.newNoteContent);\n    // if(this.state.newNoteTitle===\"\" || !this.state.newNoteTags===\"\" || !this.state.newNoteContent===\"\"){\n    //   alert(\"Please fill out the form for all the sections.\")\n    // }\n    // else{\n\n      this.setState({\n        notes: [...this.state.notes, { \"title\": this.state.newNoteTitle, \"tag\": this.state.newNoteTags, \"content\": this.state.newNoteContent}],\n        newNoteTitle: \"\",\n        newNoteTags: [],\n        newNoteContent: \"\"\n      });\n      event.target.reset();\n\n      console.log(this.state.notes)\n    // }\n  }\n\n  handleShow(){\n    this.setState({\n      show: true,\n      setShow: true\n    })\n  }\n\n  handleClose(){\n    this.setState({\n      show: false,\n      setShow: false\n    })\n  }\n\n  render() {\n    return (\n      <>  \n        \n          {/* 1. Form */}\n          <Form \n            newNoteTags={this.state.newNoteTags}\n            newNoteContent={this.state.newNoteContent}\n            submitNewNote={this.submitNewNote} \n            handleNewNoteTitleChange={this.handleNewNoteTitleChange}\n            addTags={this.addTags}\n            handleNewNoteContentChange={this.handleNewNoteContentChange}\n          />\n        <div id=\"grid\">\n          {/* 2. Tag */}\n          <Tag\n            filteredTags={this.state.filteredTags}\n            unduplicatedTagsArray={this.state.unduplicatedTagsArray}\n            getNotesByTags={this.getNotesByTags}\n            removeFilteredTags={this.removeFilteredTags}\n            getFilteredTags={this.getFilteredTags}\n          />\n\n          {/* 3. Note section */}\n          <Note \n            filteredNotes={this.state.filteredNotes}\n            show={this.state.show}\n            setShow={this.state.setShow}\n            handleShow={this.handleShow}\n            handleClose={this.handleClose}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}